import os, json, urllib.request, datetime, sys, textwrap
BASE = os.path.expanduser("~/WANSTAGE")
OUT = os.path.join(BASE, "logs")
os.makedirs(OUT, exist_ok=True)

TOPIC     = os.getenv("CONTENT_TOPIC", "日常の学びとショートTips")
CTA       = os.getenv("CONTENT_CTA",   "フォローして続きもチェック！")
HASHTAGS  = os.getenv("DEFAULT_HASHTAGS", "#学び #ライフハック #今日の積み上げ")
MODEL     = os.getenv("OPENAI_MODEL","gpt-4o-mini")
API_KEY   = os.getenv("OPENAI_API_KEY","")
USE_AI    = bool(API_KEY)

def write(path, s):
    with open(path, "w", encoding="utf-8") as f: f.write(s)

now = datetime.datetime.now().strftime("%Y-%m-%d %H:%M")

prompt = f"""あなたはSNSのプロ編集者です。テーマ「{TOPIC}」について、
1) 80〜130文字の本文（絵文字1-2個まで、具体、肯定）
2) 箇条書きの短いポイント 2〜3個（各20文字以内）
3) CTA：{CTA}
4) ハッシュタグ：{HASHTAGS} に加え、内容に合う和製タグ3つ
出力は次のJSONで：
{{
 "text": "...", "bullets": ["...","..."], "hashtags":"..."
}}"""

def gen_with_ai():
    req = urllib.request.Request(
        "https://api.openai.com/v1/chat/completions",
        data=json.dumps({
            "model": MODEL,
            "messages":[{"role":"user","content":prompt}],
            "temperature":0.7
        }).encode("utf-8"),
        headers={"Content-Type":"application/json","Authorization":f"Bearer {API_KEY}"}
    )
    with urllib.request.urlopen(req, timeout=60) as r:
        data = json.loads(r.read().decode("utf-8"))
    content = data["choices"][0]["message"]["content"]
    # JSON抽出（ゆるめ）
    start = content.find("{"); end = content.rfind("}")
    obj = json.loads(content[start:end+1]) if start!=-1 and end!=-1 else {"text":content,"bullets":[],"hashtags":HASHTAGS}
    return obj

def gen_fallback():
    return {
        "text": f"{TOPIC}についての気づきをシェアします。まずは小さく始めて、今日一歩進もう。{CTA}",
        "bullets": ["結論を先に", "具体例を一つ", "明日やることも一つ"],
        "hashtags": HASHTAGS + " #成長 #継続 #前進"
    }

obj = gen_with_ai() if USE_AI else gen_fallback()
post_txt = obj["text"].strip() + "\n" + "\n".join([f"・{b}" for b in obj.get("bullets",[])]) + "\n" + obj.get("hashtags","")
write(os.path.join(OUT,"post_text.txt"), post_txt)
print("[gen] post_text.txt written at", now)
