name: wanstage release (tag→build→sign→GitHub Release)

on:
  workflow_dispatch:
    inputs:
      tag:
        description: "Tag to release (override)"
        required: false
        type: string
  push:
    tags:
      - 'v*'              # 例: v20250926 / v20250926-fix3
  workflow_dispatch:
    inputs:
      tag:
        description: "Release tag (e.g. v20250926 or v20250926-fix3)"
        required: true
        type: string

permissions:
  contents: write

jobs:
  release:
    # タグ発火 or 手動実行 以外はスキップ
    if: startsWith(github.ref, 'refs/tags/v') || github.event_name == 'workflow_dispatch'
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - name: Derive TAG/RELDATE
        shell: bash
        run: |
          set -euo pipefail
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            TAG="${{ inputs.tag }}"
          else
            TAG="${GITHUB_REF_NAME}"
          fi
          RELDATE="${TAG#v}"
          RELDATE="${RELDATE%%-*}"
          echo "TAG=$TAG" >> $GITHUB_ENV
          echo "RELDATE=$RELDATE" >> $GITHUB_ENV
          printf "TAG=%s RELDATE=%s\n" "$TAG" "$RELDATE"

      - name: Setup tools
        shell: bash
        run: |
          set -euo pipefail
          brew install jq coreutils minisign gnu-tar zip expect >/dev/null || true
          for f in pack-by-category.zsh scripts/wan-clean.sh; do
            [[ -f "$f" ]] || continue
            perl -i -pe 's/\r$//' "$f" || true
            chmod +x "$f" || true
          done

      - name: Clean workspace (best effort)
        shell: bash
        run: |
          set -euo pipefail
          [[ -x scripts/wan-clean.sh ]] && scripts/wan-clean.sh || true

      - name: Pack (robust)
        shell: bash
        run: |
          set -euo pipefail
          if [[ -f categories_latest.csv && -x ./pack-by-category.zsh ]]; then
            ./pack-by-category.zsh -c categories_latest.csv -o "release_${RELDATE}" -f "094057,image,media"
          else
            echo "categories_latest.csv or pack-by-category.zsh missing → minimal payload"
            mkdir -p "release_${RELDATE}"
            echo "WANSTAGE ${TAG}" > "release_${RELDATE}/README.txt"
          fi
          mkdir -p "release_all_${RELDATE}"
          cp -R release_* "release_all_${RELDATE}/" 2>/dev/null || true
          [[ -f minisign_pubkey.txt ]] && cp minisign_pubkey.txt "release_all_${RELDATE}/" || true
          gtar -czf "release_all_${RELDATE}.tar.gz" "release_all_${RELDATE}"
          zip -r  "release_all_${RELDATE}.zip"     "release_all_${RELDATE}"

      - name: Checksums
        shell: bash
        run: |
          set -euo pipefail
          shasum -a 256 "release_all_${RELDATE}.tar.gz" "release_all_${RELDATE}.zip" \
            > "SHA256SUMS_release_all_${RELDATE}.txt"
          ls -lh "SHA256SUMS_release_all_${RELDATE}.txt"

      - name: Sign with minisign (optional via secrets)
        if: ${{ secrets.MINISIGN_SECRET_KEY != '' && secrets.MINISIGN_PASSWORD != '' }}
        env:
          MINISIGN_SECRET_KEY: ${{ secrets.MINISIGN_SECRET_KEY }}   # base64 of minisign_seckey.txt
          MINISIGN_PASSWORD:   ${{ secrets.MINISIGN_PASSWORD }}
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p ~/.minisign_keys
          echo "$MINISIGN_SECRET_KEY" | base64 --decode > ~/.minisign_keys/minisign_seckey.txt
          chmod 600 ~/.minisign_keys/minisign_seckey.txt
/usr/bin/expect <<'EOD'
set timeout -1
set pw $env(MINISIGN_PASSWORD)
foreach f {"release_all_${env(RELDATE)}.tar.gz" "release_all_${env(RELDATE)}.zip"} {
  if {[file exists $f]} {
    spawn minisign -Sm $f -s ~/.minisign_keys/minisign_seckey.txt
    expect "Password:" { send "$pw\r" }
    expect eof
  }
}
EOD

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name:  ${{ env.TAG }}
          name:      ${{ env.TAG }}
          draft:     false
          prerelease:false
          files: |
            release_all_${{ env.RELDATE }}.tar.gz
            release_all_${{ env.RELDATE }}.zip
            SHA256SUMS_release_all_${{ env.RELDATE }}.txt
            release_all_${{ env.RELDATE }}.tar.gz.minisig
            release_all_${{ env.RELDATE }}.zip.minisig
          fail_on_unmatched_files: false
